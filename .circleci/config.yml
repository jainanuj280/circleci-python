version: 2.1

orbs:
  python: circleci/python@0.2.1
  ansible-ssh: orbss/ansible-ssh@0.7.4

jobs:
  build-and-test:
    executor: python/default
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          command: |
            . venv/bin/activate
            pwd
            ~/project/venv/bin/nosetests tests
          name: Test


  ansible-playbook:
    executor:
      ubuntu14:
        machine: true
      centos7-ansible-yum:
        docker:
          - image: tomonorimatsumura/centos7-ansible:yum

      centos7-sshd:
        docker:
          - image: tomonorimatsumura/centos7-sshd:latest
        
    steps:
      - run:
          name: Install Ansible
          command: |
            sudo apt update -y 
            sudo apt install -y language-pack-ja-base language-pack-ja 
            sudo apt install -y software-properties-common 
            sudo apt-add-repository -y ppa:ansible/ansible 
            sudo apt update -y 
            sudo apt install -y curl python-dev git 
            sudo curl "https://bootstrap.pypa.io/get-pip.py" -o "/tmp/get-pip.py" 
            sudo python /tmp/get-pip.py 
            sudo pip install --upgrade pip && pip install --upgrade setuptools 
            sudo pip install ansible 
            
      - run:
          name: Run Docker container
          command: |
            sudo docker run -d --name test-01 centos
            sudo docker ps
            sudo docker exec test-01 /bin/sh -c 'cat /etc/redhat-release'
            
      - run:
          name: Create Ansible inventory file
          command: |
            HOST=`echo $DOCKER_HOST | sed 's|tcp\://||' | sed 's/:.*//'`
            cd $CIRCLE_WORKING_DIRECTORY
            echo '[test_servers]' > host
            echo 'test-01' >> host
            
      - run:
          name: Execute Docker command
          command: docker exec test-01 /bin/sh -c 'cat /etc/redhat-release'
          
      - run:
          name: Execute Ansible Playbook
          command: |
            cd $CIRCLE_WORKING_DIRECTORY
            whoami
            export ANSIBLE_REMOTE_TMP="/tmp"
            ansible-playbook -i host -c docker -u docker install.yml
            sudo ansible-playbook ansible/playbook.yml -i ansible/inventories/dev/hosts.ini
            
      - run:
          name: Execute Ansible Playbook again, checking to make sure it's idempotent.
          command: |
            cd $CIRCLE_WORKING_DIRECTORY
            ansible-playbook -i host install.yml

            
workflows:
  main:
    jobs:
      - build-and-test
      - ansible-playbook
    
